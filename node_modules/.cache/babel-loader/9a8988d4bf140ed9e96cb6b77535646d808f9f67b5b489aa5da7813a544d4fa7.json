{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\laura\\\\Music\\\\ARSW\\\\LAB_6-ARSW\\\\blueprints-client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport BlueprintTable from './components/BlueprintTable';\nimport BlueprintsList from './components/BlueprintsList';\nimport { getBlueprintsByAuthor } from './services/apiService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [author, setAuthor] = useState('');\n  const [blueprints, setBlueprints] = useState([]);\n  const [error, setError] = useState(null);\n  const fetchBlueprints = async () => {\n    setError(null);\n    try {\n      const data = await getBlueprintsByAuthor(author);\n      console.log(data); // Verifica que los datos se reciban correctamente\n      if (data.length === 0) {\n        setError('No se encontraron planos para este autor');\n      } else {\n        setBlueprints(data);\n      }\n    } catch (err) {\n      setError('Error al obtener los planos');\n      setBlueprints([]);\n    }\n  };\n  const openBlueprint = blueprint => {\n    alert(`Abriendo el plano: ${blueprint.name}`);\n  };\n  const totalPoints = blueprints.reduce((acc, blueprint) => acc + blueprint.points.length, 0); // Asegúrate de que points sea un array\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Blueprints\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Ingrese el autor\",\n      value: author,\n      onChange: e => setAuthor(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchBlueprints,\n      children: \"Get Blueprints\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), \" \", blueprints.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Autor seleccionado: \", author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(BlueprintTable, {\n        blueprints: blueprints,\n        onOpen: openBlueprint\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total de puntos: \", totalPoints]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(BlueprintsList, {\n      blueprints: blueprints\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"J35Q7W2UJ0avgURtX8LY3oW/ct8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BlueprintTable","BlueprintsList","getBlueprintsByAuthor","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","author","setAuthor","blueprints","setBlueprints","error","setError","fetchBlueprints","data","console","log","length","err","openBlueprint","blueprint","alert","name","totalPoints","reduce","acc","points","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","style","color","onOpen","_c","$RefreshReg$"],"sources":["C:/Users/laura/Music/ARSW/LAB_6-ARSW/blueprints-client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport BlueprintTable from './components/BlueprintTable';\nimport BlueprintsList from './components/BlueprintsList';\nimport { getBlueprintsByAuthor } from './services/apiService';\n\nconst App = () => {\n  const [author, setAuthor] = useState('');\n  const [blueprints, setBlueprints] = useState([]);\n  const [error, setError] = useState(null);\n\n  const fetchBlueprints = async () => {\n    setError(null);\n    try {\n      const data = await getBlueprintsByAuthor(author);\n      console.log(data); // Verifica que los datos se reciban correctamente\n      if (data.length === 0) {\n        setError('No se encontraron planos para este autor');\n      } else {\n        setBlueprints(data);\n      }\n    } catch (err) {\n      setError('Error al obtener los planos');\n      setBlueprints([]);\n    }\n  };\n\n  const openBlueprint = (blueprint) => {\n    alert(`Abriendo el plano: ${blueprint.name}`);\n  };\n\n  const totalPoints = blueprints.reduce((acc, blueprint) => acc + blueprint.points.length, 0); // Asegúrate de que points sea un array\n\n  return (\n    <div>\n      <h1>Blueprints</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Ingrese el autor\"\n        value={author}\n        onChange={(e) => setAuthor(e.target.value)}\n      />\n      <button onClick={fetchBlueprints}>Get Blueprints</button>\n\n      {error && <p style={{ color: 'red' }}>{error}</p>} {/* Mostrar error si existe */}\n\n      {blueprints.length > 0 && (\n        <>\n          <h2>Autor seleccionado: {author}</h2>\n          <BlueprintTable blueprints={blueprints} onOpen={openBlueprint} />\n          <h3>Total de puntos: {totalPoints}</h3>\n        </>\n      )}\n\n      {/* Agrega BlueprintsList */}\n      <BlueprintsList blueprints={blueprints} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}