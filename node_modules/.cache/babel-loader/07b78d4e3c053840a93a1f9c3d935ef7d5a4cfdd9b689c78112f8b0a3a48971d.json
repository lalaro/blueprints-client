{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\laura\\\\Music\\\\ARSW\\\\LAB_6-ARSW\\\\blueprints-client\\\\src\\\\components\\\\BlueprintsList.js\",\n  _s = $RefreshSig$();\nimport '../css/BlueprintsList.css';\nimport React, { useState } from 'react';\nimport { getBlueprintsByAuthor } from '../services/apiService';\nimport BlueprintTable from './BlueprintTable';\nimport BlueprintCanvas from './BlueprintCanvas';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BlueprintsList = () => {\n  _s();\n  const [author, setAuthor] = useState('');\n  const [blueprints, setBlueprints] = useState([]);\n  const [selectedBlueprint, setSelectedBlueprint] = useState(null);\n  const [error, setError] = useState(null);\n  const fetchBlueprints = async () => {\n    setError(null);\n    try {\n      const data = await getBlueprintsByAuthor(author);\n      if (data.length === 0) {\n        setError('No se encontraron planos para este autor');\n      } else {\n        setBlueprints(data);\n      }\n    } catch (err) {\n      setError('Error al obtener los planos');\n      setBlueprints([]);\n    }\n  };\n  const openBlueprint = blueprint => {\n    console.log('Plano seleccionado:', blueprint);\n    setSelectedBlueprint(blueprint);\n  };\n  const totalPoints = blueprints.reduce((acc, blueprint) => acc + blueprint.points.length, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Blueprints\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Ingrese el autor\",\n      value: author,\n      onChange: e => setAuthor(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchBlueprints,\n      children: \"Get Blueprints\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), \"  \", blueprints.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Autor seleccionado: \", author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(BlueprintTable, {\n        blueprints: blueprints,\n        onOpen: openBlueprint\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total de puntos: \", totalPoints]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), selectedBlueprint && /*#__PURE__*/_jsxDEV(BlueprintCanvas, {\n      blueprint: selectedBlueprint\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(BlueprintsList, \"ArbF+7E0zgiWoMCn83J8i+Pat+U=\");\n_c = BlueprintsList;\nexport default BlueprintsList;\nvar _c;\n$RefreshReg$(_c, \"BlueprintsList\");","map":{"version":3,"names":["React","useState","getBlueprintsByAuthor","BlueprintTable","BlueprintCanvas","jsxDEV","_jsxDEV","Fragment","_Fragment","BlueprintsList","_s","author","setAuthor","blueprints","setBlueprints","selectedBlueprint","setSelectedBlueprint","error","setError","fetchBlueprints","data","length","err","openBlueprint","blueprint","console","log","totalPoints","reduce","acc","points","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","style","color","onOpen","_c","$RefreshReg$"],"sources":["C:/Users/laura/Music/ARSW/LAB_6-ARSW/blueprints-client/src/components/BlueprintsList.js"],"sourcesContent":["import '../css/BlueprintsList.css';\r\nimport React, { useState } from 'react';\r\nimport { getBlueprintsByAuthor } from '../services/apiService';\r\nimport BlueprintTable from './BlueprintTable';\r\nimport BlueprintCanvas from './BlueprintCanvas';\r\n\r\nconst BlueprintsList = () => {\r\n  const [author, setAuthor] = useState('');\r\n  const [blueprints, setBlueprints] = useState([]);\r\n  const [selectedBlueprint, setSelectedBlueprint] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchBlueprints = async () => {\r\n    setError(null);\r\n    try {\r\n      const data = await getBlueprintsByAuthor(author);\r\n      if (data.length === 0) {\r\n        setError('No se encontraron planos para este autor');\r\n      } else {\r\n        setBlueprints(data);\r\n      }\r\n    } catch (err) {\r\n      setError('Error al obtener los planos');\r\n      setBlueprints([]);\r\n    }\r\n  };\r\n\r\n  const openBlueprint = (blueprint) => {\r\n    console.log('Plano seleccionado:', blueprint);\r\n    setSelectedBlueprint(blueprint);\r\n  };\r\n\r\n  const totalPoints = blueprints.reduce((acc, blueprint) => acc + blueprint.points.length, 0);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Blueprints</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Ingrese el autor\"\r\n        value={author}\r\n        onChange={(e) => setAuthor(e.target.value)}\r\n      />\r\n      <button onClick={fetchBlueprints}>Get Blueprints</button>\r\n\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}  {/* Mostrar el error si existe */}\r\n\r\n      {blueprints.length > 0 && (\r\n        <>\r\n          <h2>Autor seleccionado: {author}</h2>\r\n          <BlueprintTable blueprints={blueprints} onOpen={openBlueprint} />\r\n          <h3>Total de puntos: {totalPoints}</h3>\r\n        </>\r\n      )}\r\n\r\n      {selectedBlueprint && <BlueprintCanvas blueprint={selectedBlueprint} />} {/* Renderizar el canvas si hay un plano seleccionado */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlueprintsList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}