{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\laura\\\\Music\\\\ARSW\\\\LAB_6-ARSW\\\\blueprints-client\\\\src\\\\components\\\\BlueprintTable.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlueprintTable = ({\n  blueprints,\n  onOpen\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    id: \"blueprintsTable\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Nombre del plano\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 6,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"N\\xFAmero de puntos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 7,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Acciones\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 11\n        }, this), \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 5,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: blueprints.map((blueprint, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: blueprint.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: blueprint.points.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onOpen(blueprint),\n            children: \"Abrir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 15\n          }, this), \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 5\n  }, this);\n};\n_c = BlueprintTable;\nvar _c;\n$RefreshReg$(_c, \"BlueprintTable\");","map":{"version":3,"names":["BlueprintTable","blueprints","onOpen","_jsxDEV","id","children","fileName","_jsxFileName","lineNumber","columnNumber","map","blueprint","index","name","points","length","onClick","_c","$RefreshReg$"],"sources":["C:/Users/laura/Music/ARSW/LAB_6-ARSW/blueprints-client/src/components/BlueprintTable.js"],"sourcesContent":["const BlueprintTable = ({ blueprints, onOpen }) => {\n  return (\n    <table id=\"blueprintsTable\">\n      <thead>\n        <tr>\n          <th>Nombre del plano</th>\n          <th>Número de puntos</th>\n          <th>Acciones</th>  {/* Nueva columna para el botón */}\n        </tr>\n      </thead>\n      <tbody>\n        {blueprints.map((blueprint, index) => (\n          <tr key={index}>\n            <td>{blueprint.name}</td>\n            {/* Contamos la cantidad de puntos */}\n            <td>{blueprint.points.length}</td>\n            <td>\n              <button onClick={() => onOpen(blueprint)}>Abrir</button>  {/* Botón Abrir */}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n"],"mappings":";;AAAA,MAAMA,cAAc,GAAGA,CAAC;EAAEC,UAAU;EAAEC;AAAO,CAAC,KAAK;EACjD,oBACEC,OAAA;IAAOC,EAAE,EAAC,iBAAiB;IAAAC,QAAA,gBACzBF,OAAA;MAAAE,QAAA,eACEF,OAAA;QAAAE,QAAA,gBACEF,OAAA;UAAAE,QAAA,EAAI;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzBN,OAAA;UAAAE,QAAA,EAAI;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzBN,OAAA;UAAAE,QAAA,EAAI;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,MAAE;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACRN,OAAA;MAAAE,QAAA,EACGJ,UAAU,CAACS,GAAG,CAAC,CAACC,SAAS,EAAEC,KAAK,kBAC/BT,OAAA;QAAAE,QAAA,gBACEF,OAAA;UAAAE,QAAA,EAAKM,SAAS,CAACE;QAAI;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAEzBN,OAAA;UAAAE,QAAA,EAAKM,SAAS,CAACG,MAAM,CAACC;QAAM;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAClCN,OAAA;UAAAE,QAAA,gBACEF,OAAA;YAAQa,OAAO,EAAEA,CAAA,KAAMd,MAAM,CAACS,SAAS,CAAE;YAAAN,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,MAAE;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxD,CAAC;MAAA,GANEG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ,CAAC;AAACQ,EAAA,GAxBIjB,cAAc;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}